name: 🏁 Windows
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 2'

env:
  CARGO_TERM_COLOR: always

jobs:
  windows-cli:
    strategy:
      matrix:
        toolchain: [ stable ]
        type: [ release ]
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            target
          key: windows-cli-${{github.ref}}-${{github.sha}}
          restore-keys: |
            windows-cli-${{github.ref}}-${{github.sha}}

      - name: Build CLI Debug
        run: cargo build --bin czkawka_cli
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"
        if: ${{ matrix.type == 'debug'}}

      - name: Build CLI Release
        run: cargo build --release --bin czkawka_cli
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"
        if: ${{ matrix.type == 'release'}}

      - name: Store Windows CLI
        uses: actions/upload-artifact@v2
        with:
          name: czkawka_cli-${{ runner.os }}-${{ matrix.toolchain }}
          path: target/release/czkawka_cli.exe
        if: ${{ matrix.type == 'release' }}

      # Duplicate finder checks included and excluded directories
      # Others are just check delete files number
      # Windows build have some elements changed like powershell before wget and unzip, python instead python3, rm -r  instead rm -r and one (at the top) additional test which check size of characyers
      - name: test
        run: |
          powershell wget https://github.com/qarmin/czkawka/releases/download/1.1.0/TestSuite.zip -O TestSuite.zip
          powershell unzip TestSuite.zip -d TestSuite
          python misc/check_results.py TestSuite 15 8


          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" "$(pwd)\testsuite" -e "$(pwd)/TestSuite/subFolder" -D aeo -m 1024
          python misc/check_results.py TestSuite 13 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" "$(pwd)/teStSuite" -D aen -m 1024
          python misc/check_results.py TestSuite 7 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli dup -d "$(pwd)\TestSuite" "$(pwd)/TESTSUITE" -D aen -m 1024
          python misc/check_results.py TestSuite 7 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite




          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" -D aen -m 1024
          python misc/check_results.py TestSuite 7 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" -D aen -m 1024
          python misc/check_results.py TestSuite 7 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" -x TEXT -D aeo -m 1024
          python misc/check_results.py TestSuite 14 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" -e "$(pwd)/TestSuite/SubFolder" -D aeo -m 1024
          python misc/check_results.py TestSuite 13 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" -m 1500 -D aeo
          python misc/check_results.py TestSuite 8 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" -R -m 1024
          python misc/check_results.py TestSuite 15 8
          target/release/czkawka_cli dup -d "$(pwd)/TestSuite" -R -D aeo -m 1024
          python misc/check_results.py TestSuite 13 8


          target/release/czkawka_cli big -d "$(pwd)/TestSuite"

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli empty-files -d "$(pwd)/TestSuite"
          python misc/check_results.py TestSuite 15 8
          target/release/czkawka_cli empty-files -d "$(pwd)/TestSuite" -D
          python misc/check_results.py TestSuite 13 8

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli empty-folders -d "$(pwd)/TestSuite"
          python misc/check_results.py TestSuite 15 8
          target/release/czkawka_cli empty-folders -d "$(pwd)/TestSuite" -D
          python misc/check_results.py TestSuite 15 2

          rm -r TestSuite
          unzip TestSuite.zip -d TestSuite

          target/release/czkawka_cli temp -d "$(pwd)/TestSuite"
          python misc/check_results.py TestSuite 15 8
          target/release/czkawka_cli temp -d "$(pwd)/TestSuite" -D
          python misc/check_results.py TestSuite 14 8
        if: ${{ matrix.type == 'release' }}

  windows-release-gui:
    strategy:
      matrix:
        toolchain: [ stable ]
        type: [ release ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            target
          key: windows-gui-${{github.ref}}-${{github.sha}}
          restore-keys: |
            windows-gui-${{github.ref}}-${{github.sha}}

      - name: Install Gtk, Mingw, unzip, zip and wget
        run: sudo apt-get update; sudo apt install mingw-w64 libgtk-3-dev unzip wget zip -y

      - name: Release normal(gui)
        run: |
          rustup target add x86_64-pc-windows-gnu

          echo "[target.x86_64-pc-windows-gnu]" > ~/.cargo/config
          echo "linker = \"x86_64-w64-mingw32-gcc\"" >> ~/.cargo/config
          echo "ar = \"x86_64-w64-mingw32-gcc-ar\"" >> ~/.cargo/config


          PKG_CONFIG_ALLOW_CROSS=1 cargo build --target=x86_64-pc-windows-gnu --bin czkawka_gui --release
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"

      - name: Store Windows GUI CrossComplile
        uses: actions/upload-artifact@v2
        with:
          name: czkawka_gui-Windows-release-normal-${{ matrix.toolchain }}
          path: target/release/czkawka_gui.exe

  windows-debug-gui:
    strategy:
      matrix:
        toolchain: [ stable ]
        type: [ release ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            target
          key: windows-gui-${{github.ref}}-${{github.sha}}
          restore-keys: |
            windows-gui-${{github.ref}}-${{github.sha}}

      - name: Install Gtk, Mingw, unzip, zip and wget
        run: sudo apt-get update; sudo apt install mingw-w64 libgtk-3-dev unzip wget zip -y

      - name: Release debug(gui)
        run: |
          rustup target add x86_64-pc-windows-gnu

          echo "[target.x86_64-pc-windows-gnu]" > ~/.cargo/config
          echo "linker = \"x86_64-w64-mingw32-gcc\"" >> ~/.cargo/config
          echo "ar = \"x86_64-w64-mingw32-gcc-ar\"" >> ~/.cargo/config


          PKG_CONFIG_ALLOW_CROSS=1 cargo build --target=x86_64-pc-windows-gnu --bin czkawka_gui
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"

      - name: Store Windows GUI CrossComplile
        uses: actions/upload-artifact@v2
        with:
          name: czkawka_gui-Windows-release-normal-${{ matrix.toolchain }}
          path: target/debug/czkawka_gui.exe

  windows-release-console:
    strategy:
      matrix:
        toolchain: [ stable ]
        type: [ release ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            target
          key: windows-gui-${{github.ref}}-${{github.sha}}
          restore-keys: |
            windows-gui-${{github.ref}}-${{github.sha}}

      - name: Install Gtk, Mingw, unzip, zip and wget
        run: sudo apt-get update; sudo apt install mingw-w64 libgtk-3-dev unzip wget zip -y

      - name: Release normal(gui)
        run: |
          sed -i 's/windows_subsystem = "windows"/windows_subsystem = "console"/' src/main.rs 
          rustup target add x86_64-pc-windows-gnu

          echo "[target.x86_64-pc-windows-gnu]" > ~/.cargo/config
          echo "linker = \"x86_64-w64-mingw32-gcc\"" >> ~/.cargo/config
          echo "ar = \"x86_64-w64-mingw32-gcc-ar\"" >> ~/.cargo/config


          PKG_CONFIG_ALLOW_CROSS=1 cargo build --target=x86_64-pc-windows-gnu --bin czkawka_gui --release
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"

      - name: F
        uses: actions/upload-artifact@v2
        with:
          name: czkawka_gui-Windows-release-console-${{ matrix.toolchain }}
          path: target/release/czkawka_gui.exe

  windows-debug-console:
    strategy:
      matrix:
        toolchain: [ stable ]
        type: [ release ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            target
          key: windows-gui-${{github.ref}}-${{github.sha}}
          restore-keys: |
            windows-gui-${{github.ref}}-${{github.sha}}

      - name: Install Gtk, Mingw, unzip, zip and wget
        run: sudo apt-get update; sudo apt install mingw-w64 libgtk-3-dev unzip wget zip -y

      - name: Release debug(gui)
        run: |
          sed -i 's/windows_subsystem = "windows"/windows_subsystem = "console"/' src/main.rs 
          rustup target add x86_64-pc-windows-gnu

          echo "[target.x86_64-pc-windows-gnu]" > ~/.cargo/config
          echo "linker = \"x86_64-w64-mingw32-gcc\"" >> ~/.cargo/config
          echo "ar = \"x86_64-w64-mingw32-gcc-ar\"" >> ~/.cargo/config


          PKG_CONFIG_ALLOW_CROSS=1 cargo build --target=x86_64-pc-windows-gnu --bin czkawka_gui
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"

      - name: Store Windows GUI CrossComplile
        uses: actions/upload-artifact@v2
        with:
          name: czkawka_gui-Windows-debug-console-${{ matrix.toolchain }}
          path: target/debug/czkawka_gui.exe
